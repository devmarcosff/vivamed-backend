{
	"info": {
		"_postman_id": "32b2861b-3985-437e-b32f-1ae285b6f8f1",
		"name": "Vivamed",
		"description": "# Vivamed",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "479523"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "/v2/auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"",
									"    if(response.access_token)",
									"        pm.environment.set(\"access_token\", response.access_token);",
									"",
									"    if(response.refresh_token)",
									"        pm.environment.set(\"refresh_token\", response.refresh_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"romulo-gouvea@hotmail.com\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"login"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "/v2/auth/refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"",
									"    pm.environment.set(\"access_token\", response.access_token);",
									"    pm.environment.set(\"refresh_token\", response.refresh_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\": \"{{access_token}}\",\n    \"refresh_token\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"refresh"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "/v2/auth/request-reset-password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"string\",\n  \"email\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/request-reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"request-reset-password"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "/v2/auth/reset-password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"string\",\n  \"email\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"reset-password"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "/v2/auth/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"string\",\n  \"email\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"logout"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "/v2/user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v2/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/user/id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v2/user/086ac86f-0a30-4d0c-93fb-568067972bfe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"user",
								"086ac86f-0a30-4d0c-93fb-568067972bfe"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"5\",\n  \"cpf\": \"5\",\n  \"email\": \"5\",\n  \"password\": \"string\",\n  \"role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "/v2/profile/id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v2/profile/970a8d51-ca69-4896-98e8-d33d18a77427",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"profile",
								"970a8d51-ca69-4896-98e8-d33d18a77427"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"OPA\",\n  \"birthday\": \"2024-11-24T17:49:51.356Z\",\n  \"picture\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/profile/d706a75c-1ee9-4370-88ef-3ddaef325b5d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"profile",
								"d706a75c-1ee9-4370-88ef-3ddaef325b5d"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"083c002e-0548-4bbc-b719-239ddc1580cc\",\n    \"name\": \"string\",\n    \"birthday\": \"2024-11-24T17:49:51.356Z\",\n    \"picture\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "/v2/address/id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v2/address/6ecedf3b-3f10-4b25-b119-703d15c19161",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"address",
								"6ecedf3b-3f10-4b25-b119-703d15c19161"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v2/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"address"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "street",
									"value": "",
									"disabled": true
								},
								{
									"key": "city",
									"value": "",
									"disabled": true
								},
								{
									"key": "zipcode",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "profileId",
									"value": "",
									"disabled": true
								},
								{
									"key": "citizenId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zipcode\": \"string\",\n    \"street\": \"string\",\n    \"number\": 0,\n    \"neighborhood\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"complement\": \"string\",\n    \"latitude\": 0,\n    \"longitude\": 0,\n    \"profileId\": \"d706a75c-1ee9-4370-88ef-3ddaef325b5d\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "/v2/address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zipcode\": \"123456\",\n    \"street\": \"string\",\n    \"number\": 0,\n    \"neighborhood\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"complement\": \"string\",\n    \"latitude\": 0,\n    \"longitude\": 0,\n    \"profileId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/address/6ecedf3b-3f10-4b25-b119-703d15c19161",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"address",
								"6ecedf3b-3f10-4b25-b119-703d15c19161"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Citizen",
			"item": [
				{
					"name": "import",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "city",
									"value": "Bom Jesus do Itabapoana",
									"type": "text"
								},
								{
									"key": "district",
									"value": "Serrinha",
									"type": "text"
								},
								{
									"key": "updateDuplicates",
									"value": "true",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/home/romulo/exemplo.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/v2/citizen/import",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"citizen",
								"import"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		}
	]
}